/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
*/

import { ServiceClientOptions, RequestOptions, ServiceCallback } from 'ms-rest';
import * as models from '../models';


/**
 * @class
 * Vaults
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the KeyVaultManagementClient.
 */
export interface Vaults {

    /**
     * Create or update a key vault in the specified subscription.
     *
     * @param {string} resourceGroupName The name of the Resource Group to which
     * the server belongs.
     * 
     * @param {string} vaultName Name of the vault
     * 
     * @param {object} parameters Parameters to create or update the vault
     * 
     * @param {string} parameters.location The supported Azure location where the
     * key vault should be created.
     * 
     * @param {object} [parameters.tags] The tags that will be assigned to the key
     * vault.
     * 
     * @param {object} parameters.properties Properties of the vault
     * 
     * @param {string} [parameters.properties.vaultUri] The URI of the vault for
     * performing operations on keys and secrets.
     * 
     * @param {uuid} parameters.properties.tenantId The Azure Active Directory
     * tenant ID that should be used for authenticating requests to the key vault.
     * 
     * @param {object} parameters.properties.sku SKU details
     * 
     * @param {string} parameters.properties.sku.name SKU name to specify whether
     * the key vault is a standard vault or a premium vault. Possible values
     * include: 'standard', 'premium'
     * 
     * @param {array} parameters.properties.accessPolicies An array of 0 to 16
     * identities that have access to the key vault. All identities in the array
     * must use the same tenant ID as the key vault's tenant ID.
     * 
     * @param {boolean} [parameters.properties.enabledForDeployment] Property to
     * specify whether Azure Virtual Machines are permitted to retrieve
     * certificates stored as secrets from the key vault.
     * 
     * @param {boolean} [parameters.properties.enabledForDiskEncryption] Property
     * to specify whether Azure Disk Encryption is permitted to retrieve secrets
     * from the vault and unwrap keys.
     * 
     * @param {boolean} [parameters.properties.enabledForTemplateDeployment]
     * Property to specify whether Azure Resource Manager is permitted to
     * retrieve secrets from the key vault.
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    createOrUpdate(resourceGroupName: string, vaultName: string, parameters: models.VaultCreateOrUpdateParameters, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Vault>): void;
    createOrUpdate(resourceGroupName: string, vaultName: string, parameters: models.VaultCreateOrUpdateParameters, callback: ServiceCallback<models.Vault>): void;

    /**
     * Deletes the specified Azure key vault.
     *
     * @param {string} resourceGroupName The name of the Resource Group to which
     * the vault belongs.
     * 
     * @param {string} vaultName The name of the vault to delete
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    deleteMethod(resourceGroupName: string, vaultName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;
    deleteMethod(resourceGroupName: string, vaultName: string, callback: ServiceCallback<void>): void;

    /**
     * Gets the specified Azure key vault.
     *
     * @param {string} resourceGroupName The name of the Resource Group to which
     * the vault belongs.
     * 
     * @param {string} vaultName The name of the vault.
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    get(resourceGroupName: string, vaultName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Vault>): void;
    get(resourceGroupName: string, vaultName: string, callback: ServiceCallback<models.Vault>): void;

    /**
     * The List operation gets information about the vaults associated with the
     * subscription and within the specified resource group.
     *
     * @param {string} resourceGroupName The name of the Resource Group to which
     * the vault belongs.
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {number} [options.top] Maximum number of results to return.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    listByResourceGroup(resourceGroupName: string, options: { top? : number, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.VaultListResult>): void;
    listByResourceGroup(resourceGroupName: string, callback: ServiceCallback<models.VaultListResult>): void;

    /**
     * The List operation gets information about the vaults associated with the
     * subscription.
     *
     * @param {object} [options] Optional Parameters.
     * 
     * @param {number} [options.top] Maximum number of results to return.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    list(options: { top? : number, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.VaultListResult>): void;
    list(callback: ServiceCallback<models.VaultListResult>): void;

    /**
     * The List operation gets information about the vaults associated with the
     * subscription and within the specified resource group.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    listByResourceGroupNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.VaultListResult>): void;
    listByResourceGroupNext(nextPageLink: string, callback: ServiceCallback<models.VaultListResult>): void;

    /**
     * The List operation gets information about the vaults associated with the
     * subscription.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    listNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.VaultListResult>): void;
    listNext(nextPageLink: string, callback: ServiceCallback<models.VaultListResult>): void;
}
