/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

var util = require('util');

/**
 * @class
 * Initializes a new instance of the EffectiveRoute class.
 * @constructor
 * Effective Route
 *
 * @member {string} [name] Gets the name of the user defined route. This is
 * optional.
 * 
 * @member {string} [source] Gets who created the route. Possible values
 * include: 'Unknown', 'User', 'VirtualNetworkGateway', 'Default'
 * 
 * @member {string} [state] Gets value of effective route. Possible values
 * include: 'Active', 'Invalid'
 * 
 * @member {array} [addressPrefix] Gets address prefixes of the effective
 * routes in CIDR notation.
 * 
 * @member {array} [nextHopIpAddress] Gets the IP address of the next hop of
 * the effective route
 * 
 * @member {string} [nextHopType] Gets or sets the type of Azure hop the
 * packet should be sent to. Possible values include:
 * 'VirtualNetworkGateway', 'VnetLocal', 'Internet', 'VirtualAppliance',
 * 'None'
 * 
 */
function EffectiveRoute() {
}

/**
 * Defines the metadata of EffectiveRoute
 *
 * @returns {object} metadata of EffectiveRoute
 *
 */
EffectiveRoute.prototype.mapper = function () {
  return {
    required: false,
    serializedName: 'EffectiveRoute',
    type: {
      name: 'Composite',
      className: 'EffectiveRoute',
      modelProperties: {
        name: {
          required: false,
          serializedName: 'name',
          type: {
            name: 'String'
          }
        },
        source: {
          required: false,
          serializedName: 'source',
          type: {
            name: 'String'
          }
        },
        state: {
          required: false,
          serializedName: 'state',
          type: {
            name: 'String'
          }
        },
        addressPrefix: {
          required: false,
          serializedName: 'addressPrefix',
          type: {
            name: 'Sequence',
            element: {
                required: false,
                serializedName: 'StringElementType',
                type: {
                  name: 'String'
                }
            }
          }
        },
        nextHopIpAddress: {
          required: false,
          serializedName: 'nextHopIpAddress',
          type: {
            name: 'Sequence',
            element: {
                required: false,
                serializedName: 'StringElementType',
                type: {
                  name: 'String'
                }
            }
          }
        },
        nextHopType: {
          required: false,
          serializedName: 'nextHopType',
          type: {
            name: 'String'
          }
        }
      }
    }
  };
};

module.exports = EffectiveRoute;
