/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

var util = require('util');

/**
 * @class
 * Initializes a new instance of the EffectiveNetworkSecurityRule class.
 * @constructor
 * Effective NetworkSecurityRules
 *
 * @member {string} [name] Gets the name of the security rule specified by the
 * user (if created by the user)
 * 
 * @member {string} [protocol] Gets Network protocol this rule applies to.
 * Possible values include: 'Tcp', 'Udp', '*'
 * 
 * @member {string} [sourcePortRange] Gets source port or range
 * 
 * @member {string} [destinationPortRange] Gets destination port or range
 * 
 * @member {string} [sourceAddressPrefix] Gets source address prefix
 * 
 * @member {string} [destinationAddressPrefix] Gets destination address prefix
 * 
 * @member {array} [expandedSourceAddressPrefix] Gets expanded source address
 * prefix
 * 
 * @member {array} [expandedDestinationAddressPrefix] Gets expanded
 * destination address prefix
 * 
 * @member {string} [access] Gets network traffic is allowed or denied.
 * Possible values include: 'Allow', 'Deny'
 * 
 * @member {number} [priority] Gets the priority of the rule
 * 
 * @member {string} [direction] Gets the direction of the rule. Possible
 * values include: 'Inbound', 'Outbound'
 * 
 */
function EffectiveNetworkSecurityRule() {
}

/**
 * Defines the metadata of EffectiveNetworkSecurityRule
 *
 * @returns {object} metadata of EffectiveNetworkSecurityRule
 *
 */
EffectiveNetworkSecurityRule.prototype.mapper = function () {
  return {
    required: false,
    serializedName: 'EffectiveNetworkSecurityRule',
    type: {
      name: 'Composite',
      className: 'EffectiveNetworkSecurityRule',
      modelProperties: {
        name: {
          required: false,
          serializedName: 'name',
          type: {
            name: 'String'
          }
        },
        protocol: {
          required: false,
          serializedName: 'protocol',
          type: {
            name: 'String'
          }
        },
        sourcePortRange: {
          required: false,
          serializedName: 'sourcePortRange',
          type: {
            name: 'String'
          }
        },
        destinationPortRange: {
          required: false,
          serializedName: 'destinationPortRange',
          type: {
            name: 'String'
          }
        },
        sourceAddressPrefix: {
          required: false,
          serializedName: 'sourceAddressPrefix',
          type: {
            name: 'String'
          }
        },
        destinationAddressPrefix: {
          required: false,
          serializedName: 'destinationAddressPrefix',
          type: {
            name: 'String'
          }
        },
        expandedSourceAddressPrefix: {
          required: false,
          serializedName: 'expandedSourceAddressPrefix',
          type: {
            name: 'Sequence',
            element: {
                required: false,
                serializedName: 'StringElementType',
                type: {
                  name: 'String'
                }
            }
          }
        },
        expandedDestinationAddressPrefix: {
          required: false,
          serializedName: 'expandedDestinationAddressPrefix',
          type: {
            name: 'Sequence',
            element: {
                required: false,
                serializedName: 'StringElementType',
                type: {
                  name: 'String'
                }
            }
          }
        },
        access: {
          required: false,
          serializedName: 'access',
          type: {
            name: 'String'
          }
        },
        priority: {
          required: false,
          serializedName: 'priority',
          type: {
            name: 'Number'
          }
        },
        direction: {
          required: false,
          serializedName: 'direction',
          type: {
            name: 'String'
          }
        }
      }
    }
  };
};

module.exports = EffectiveNetworkSecurityRule;
